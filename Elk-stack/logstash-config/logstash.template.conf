input {
  beats {
    port => 5044
  }
  http {
    port => 8088
    type => "input-http"
  }
}

filter {
  mutate {
    add_field => { "[@metadata][check_if_in_k8s]" => "unknown arbitrary value" }
    copy => { "[kubernetes]" => "[@metadata][check_if_in_k8s]" }
  }
  if [@metadata][check_if_in_k8s] != "unknown arbitrary value" {
    mutate {
      add_field => { "type" => "k8s" }
      rename => { "[time]" => "docker_time" }
      rename => { "[kubernetes][labels][app]" => "application" }
      rename => { "[kubernetes][labels][environment]" => "environment" }
      rename => { "[kubernetes][labels][jenkins_build_url]" => "jenkins_build_url" }
      rename => { "[kubernetes][labels][jenkins_build_user]" => "jenkins_build_user" }
    }
    json {
      source => "message"
    }
  }
  if [type] == "input-http" and [fluentbit] {
    date {
      match => [ "date", "UNIX" ]
      remove_field => [ "date" ]
    }
    mutate {
      remove_field => ["headers","host"]
    }
  }
  if "rabbitmq-prod" in [tags] {
    mutate {
      add_field => { "type" => "rabbitmq-prod" }
    }
    grok {
      match => { 
        "message" => ["%{TIMESTAMP_ISO8601:timestamp} \[%{LOGLEVEL:log_level}\] \<%{DATA:field_misc}\> %{GREEDYDATA:message}"] }
    }
  }
  if "rabbitmq-stg" in [tags] {
    mutate {
      add_field => { "type" => "rabbitmq-stg" }
    }
    grok {
      match => { "message" => ["%{TIMESTAMP_ISO8601:timestamp} \[%{LOGLEVEL:log_level}\] \<%{DATA:field_misc}\> %{GREEDYDATA:message}"] }
    }
  }
  if "aerospike" in [tags] or "aerospike-stg" in [tags] {
    mutate {
      add_field => { "type" => "aerospike" }
    }
    if "multiline" in [tags] {
      grok {
        patterns_dir => ["/usr/share/logstash/config/aerospike_patterns/patterns"]
        match => {
          "message" => ["%{HIST_START}(%{SPACE})+%{AS_REST:histograms}"]
        }
      }
      mutate {
        gsub => [
          "histograms", ".*(\s{2})",""
        ]
      }
      kv {
        value_split => ": "
        field_split => "() "
        target => "histogram"
        source => "histograms"
        remove_field => [ "histograms" ]
      }
      ruby {
        code => "
          kv = event.get('histogram')
          kv.to_hash.keys.each { |k|
            kv[k] = kv[k].to_i
          }
          event.set('histogram',kv)
        "
      }
    }
    else {
      grok {
        patterns_dir => ["/usr/share/logstash/config/aerospike_patterns/patterns"]
        match => {
          "message" => ["%{AS_NS}","%{AS_TICK}","%{AS_NSUP}","%{AS_XDR}","%{AS_SINDEX}","%{AS_ERR}","%{AS_LOG}"]
        }
      }
    }
    date {
      match => [ "logdate", "MMM dd YYYY HH:mm:ss ZZZ", "MMM d YYYY HH:mm:ss ZZZ"]
    }
  }
  if "adserver-access-stg" in [tags] {
    mutate {
      add_field => { "type" => "adserver-access-stg" }
    }
    grok {
      match => { "message" => "%{LOGLEVEL:logLevel}%{GREEDYDATA:logMessage}"}
    }
  }
  if "adserver-event-stg" in [tags] {
    grok {
      match => { "message" => "%{WORD:method} %{WORD:service} %{DATA:device_name}"}
    }
    mutate {
      add_field => { "type" => "adserver-event-stg" }
    }
  }
  if "adserver-error-stg" in [tags] {
    grok {
      match => { "message" => "%{LOGLEVEL:log_level}%{GREEDYDATA:message}"}
    }
    mutate {
      add_field => { "type" => "adserver-error-stg" }
    }
  }
}

output {
  if [type] == "k8s" and [environment] == "dev" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "k8s-%{[@metadata][beat]}-dev-%{+xxxx.ww}"
      template => "/usr/share/logstash/filebeat-template.json"
      template_name => "k8s-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "k8s" and [environment] == "prod" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "k8s-%{[@metadata][beat]}-prod-%{+xxxx.ww}"
      template => "/usr/share/logstash/filebeat-template.json"
      template_name => "k8s-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "k8s" and [environment] == "stg" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "k8s-%{[@metadata][beat]}-stg-%{+xxxx.ww}"
      template => "/usr/share/logstash/filebeat-template.json"
      template_name => "k8s-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if "aerospike" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "aerospike-%{[@metadata][beat]}-%{+xxxx.ww}"
      template => "/usr/share/logstash/aerospike-template.json"
      template_name => "arospike-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if "aerospike-stg" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "aerospike-stg-%{[@metadata][beat]}-%{+xxxx.ww}"
      template => "/usr/share/logstash/aerospike-template.json"
      template_name => "arospike-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "rabbitmq-prod" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "rabbitmq-prod-%{[@metadata][beat]}-%{+xxxx.ww}"
      template => "/usr/share/logstash/rabbitmq-template.json"
      template_name => "rabbitmq-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "rabbitmq-stg" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "rabbitmq-stg-%{[@metadata][beat]}-%{+xxxx.ww}"
      template => "/usr/share/logstash/rabbitmq-template.json"
      template_name => "rabbitmq-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if "orderapi-prod" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "orderapi-prod-%{[@metadata][beat]}-%{+xxxx.ww}"
      template => "/usr/share/logstash/orderapi-template.json"
      template_name => "orderapi-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if "orderapi-stg" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "orderapi-stg-%{[@metadata][beat]}-%{+xxxx.ww}"
      template => "/usr/share/logstash/orderapi-template.json"
      template_name => "orderapi-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if "mediaplanner-api" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "mediaplanner-api-%{[@metadata][beat]}-%{+xxxx.ww}"
      template => "/usr/share/logstash/mediaplanner-template.json"
      template_name => "mediaplanner-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if "mediaplanner-client" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "mediaplanner-client-%{[@metadata][beat]}-%{+xxxx.ww}"
      template => "/usr/share/logstash/mediaplanner-template.json"
      template_name => "mediaplanner-filebeat-7.8.1"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "input-http" and [celery_task_name] and [environment] == "stg" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "celery-stg-%{+xxxx.ww}"
      template => "/usr/share/logstash/celery-template.json"
      template_name => "celery-fluentbit"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "input-http" and [celery_task_name] and [environment] == "prod" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "celery-prod-%{+xxxx.ww}"
      template => "/usr/share/logstash/celery-template.json"
      template_name => "celery-fluentbit"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "input-http" and [zm_application] == "sswa" and [environment] == "stg" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "sswa-stg-%{+xxxx.ww}"
      template => "/usr/share/logstash/sswa-template.json"
      template_name => "sswa-fluentbit"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "input-http" and [zm_application] == "sswa" and [environment] == "prod" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "sswa-prod-%{+xxxx.ww}"
      template => "/usr/share/logstash/sswa-template.json"
      template_name => "sswa-fluentbit"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "input-http" and ([zm_application] == "nginx_access" or [zm_application] == "nginx_error") and [environment] == "stg" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "sswa-other-stg-%{+xxxx.ww}"
      template => "/usr/share/logstash/sswa-template.json"
      template_name => "sswa-fluentbit"
      template_overwrite => true
      manage_template => true
    }
  }
  if [type] == "input-http" and ([zm_application] == "nginx_access" or [zm_application] == "nginx_error") and [environment] == "prod" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "sswa-other-prod-%{+xxxx.ww}"
      template => "/usr/share/logstash/sswa-template.json"
      template_name => "sswa-fluentbit"
      template_overwrite => true
      manage_template => true
    }
  }
    if "adserver-event-stg" in [tags]{
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      template => "/usr/share/logstash/adserver-event-template.json"
      template_name => "adserver-event"
      template_overwrite => true
      index => "adserver-event-stg-%{+xxxx.ww}"
      manage_template => true
      codec => json
    }
    stdout {
      codec => rubydebug
    }
  }
  if "adserver-error-stg" in [tags]{
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      template => "/usr/share/logstash/adserver-error-template.json"
      template_name => "adserver-error"
      template_overwrite => true
      index => "adserver-error-stg-%{+xxxx.ww}"
      manage_template => true
      codec => json
    }
    stdout {
      codec => rubydebug
    }
  }
  if "adserver-access-stg" in [tags]{
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      template => "/usr/share/logstash/adserver-access-template.json"
      template_name => "adserver-access"
      template_overwrite => true
      index => "adserver-access-stg-%{+xxxx.ww}"
      manage_template => true
      codec => json
    }
    stdout {
      codec => rubydebug
    }
  }
}
